import type { NextPage } from 'next'
import React from 'react'
import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'

interface Props {
  userAgent?: string;
}
const  NEXT_KEY = 39
const  PREV_KEY = 37
const  UP_KEY = 38

export default class Page extends React.Component<Props> {
  currentCardCount = 6
  isFront = true
  _handleKeyDown = (event:any) => {
    switch( event.keyCode ) {
     
        case NEXT_KEY:
        if (this.currentCardCount == 0)
       {
            break
        }
        else if (this.currentCardCount > 0){
          Array.from(document.getElementsByClassName ("cardContainer")).forEach((it) =>{
            it.style.visibility = "visible";
          })
          
            if (document.getElementById ("card_"+this.currentCardCount) != null){ 
            document.getElementById ("card_"+this.currentCardCount).style.transform = "translate(-500px)"
            this.currentCardCount --
            }
            break
          }
        case PREV_KEY:
          if (this.currentCardCount == 6){
              break   
          }
          else if (this.currentCardCount < 6){ 
            Array.from(document.getElementsByClassName ("cardContainer")).forEach((it) =>{
              it.style.visibility = "visible";
            })
            console.log ("show previous card")
            if (document.getElementById ("card_"+(this.currentCardCount + 1)) != null){ 
            this.currentCardCount ++
            document.getElementById ("card_"+this.currentCardCount).style.transform = "translate(0px)"
            }
            break
          }
        case UP_KEY:
            console.log ("flip the card")
            console.log (this.currentCardCount)
            Array.from(document.getElementsByClassName ("cardContainer")).forEach((it) =>{
              console.log (it.id)
              if (it.id != "card_"+this.currentCardCount)
              it.style.visibility = "hidden";
            })
            if (this.isFront)
            document.getElementById ("card_"+this.currentCardCount).style.transform = "rotateY(180deg)"
            else
            document.getElementById ("card_"+this.currentCardCount).style.transform = "rotateY(0deg)"
            this.isFront == true ?this.isFront = false:this.isFront = true
            
              // document.getElementById ("card_"+this.currentCardCount).style.transform = "translate(0px)"
            break;
        default: 
            break;
    }
}
   componentDidMount (){
    Array.from(document.getElementsByClassName ("cardContainer")).forEach((it) =>{
    it.style.visibility = "hidden"
    })
    document.getElementById ("card_6").style.visibility = "visible"
      console.log ("inside componentDidMount")
      document.addEventListener("keydown", this._handleKeyDown);
  }
   cardClick = (event: React.MouseEvent<HTMLDivElement>) => {
   event.preventDefault();
   event.currentTarget.style.transform = "translate(-500px)"
   console.log ("clicked")
  };
  render() {
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
      {/* <div className = "[ transition: transform 0.6s] [transform-style: preserve-3d] absolute left-[28%] w-[550px] h-[300px]">
	<div>
<div  className = "[-webkit-backface-visibility: hidden] absolute bg-[lightblue] w-[100%] h-[100%] text-center border-2 border-[#ccc] rounded">
  Front
</div>
<div className = "[-webkit-backface-visibility: hidden] [transform:rotateY(180deg)] absolute bg-[lightblue] w-[100%] h-[100%] text-center border-2 border-[#ccc] rounded">
  Back
</div>
</div>
</div> */}
<div className = "displayContainer">
<div id = "card_0" onClick={this.cardClick} className="cardContainer">
  <div className="frontCard">
  Hello world
  </div>
  <div className="backCard">
  World Hello
  </div>
   
</div>
<div id = "card_1" onClick={this.cardClick} className="cardContainer">
<div className="frontCard">
  Hello world 1
  </div>
  <div className="backCard">
  World Hello 1
  </div>
</div>
<div id = "card_2" onClick={this.cardClick} className="cardContainer">
<div className="frontCard">
  Hello world 2
  </div>
  <div className="backCard">
  World Hello 2
  </div>
</div>
<div id = "card_3" onClick={this.cardClick} className="cardContainer">
<div className="frontCard">
  Hello world 3
  </div>
  <div className="backCard">
  World Hello 3
  </div>
</div>
<div id = "card_4" onClick={this.cardClick} className="cardContainer">
<div className="frontCard">
  Hello world 4
  </div>
  <div className="backCard">
  World Hello 4
  </div>
</div>
<div id = "card_5" onClick={this.cardClick} className="cardContainer">
<div className="frontCard">
  Hello world 5
  </div>
  <div className="backCard">
  World Hello 5
  </div>
</div>
<div id = "card_6" onClick={this.cardClick} className="cardContainer">
<div className="frontCard">
  Hello world 6
  </div>
  <div className="backCard">
  World Hello 6
  </div>
</div>
</div>
{/* 
<div className = {styles.cardContainer}>
	<div>
<div  class = "front card">
  Front 1
</div>
<div class = "back card">
  Back 1
</div>
</div>
</div> */}

              </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}
}
